{"version":3,"sources":["reportWebVitals.js","components/router/style.js","components/dish/Dish.jsx","utils/utils.js","components/favorite_dishes/FavoritePage.jsx","components/main/Main.jsx","components/router/RouterComp.jsx","api/dishes.js","index.jsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","navigation","paddingBottom","display","flexDirection","justifyContent","alignItems","gridGap","container","marginTop","paddingTop","gridRow","justify","backgroundColor","Dish","currentDish","ingredients","className","strMealThumb","src","alt","strMeal","length","map","data","strInstructions","getIngredients","ingredientsData","ingredientsKeys","Object","keys","filter","key","includes","i","push","FavoritePage","favoriteDishes","setFavoriteDishes","useState","favoriteDish","setFavoriteDish","setIngredients","title","setTitle","instruction","setInstruction","React","open","setOpen","useEffect","localData","localStorage","getItem","JSON","parse","showFavMeal","event","preventDefault","mealName","target","innerText","chosenDish","find","dish","deleteFavMeal","deleteId","value","newData","splice","setItem","stringify","handleClose","index","type","onClick","Button","variant","color","idMeal","style","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","TextField","autoFocus","margin","onChange","label","fullWidth","placeholder","multiline","DialogActions","prevDishes","Main","fetchRandomDish","saveToFavorite","RouterComp","setCurrentDish","classes","a","fetch","response","json","meals","fetchedDish","basename","AppBar","to","href","Container","Grid","exact","path","render","some","ReactDOM","StrictMode","document","getElementById"],"mappings":"2PAceA,G,MAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAEnB,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,sGCPDQ,EAAYC,YAAW,CAClCC,WAAY,CACVC,cAAe,MACfC,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,SACZC,QAAS,QAEXC,UAAW,CACTC,UAAW,OACXC,WAAY,OACZC,QAAS,MACTC,QAAS,SACTN,WAAY,SACZO,gBAAiB,U,qECbRC,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,YAAhB,OAClB,sBAAKC,UAAU,iBAAf,UACGF,EAAYG,aACX,qBACEC,IAAKJ,EAAYG,aACjBD,UAAU,WACVG,IAAI,SAGJ,GAEJ,6BACGL,EAAYM,UAEdL,EAAYM,OAET,qBAAIL,UAAU,cAAd,UAEE,8CACCD,EAAYO,KAAI,SAACC,GAAD,OAAW,6BAAgBA,GAAPA,SAGvC,GAEJ,4BACGT,EAAYU,sBC7BNC,EAAiB,SAACF,GAI7B,IAHA,IAAMG,EAAkB,GAElBC,EADaC,OAAOC,KAAKN,GACIO,QAAO,SAACC,GAAD,OAASA,EAAIC,SAAS,kBAAoBD,EAAIC,SAAS,iBACxFC,EAAI,EAAGA,GAAKN,EAAgBN,OAAQY,GAAK,EAC5CV,EAAK,gBAAD,OAAiBU,KACvBP,EAAgBQ,KAAhB,UACKX,EAAK,gBAAD,OAAiBU,IAD1B,YAEIV,EAAK,aAAD,OAAcU,MAK1B,OAAOP,GCHIS,G,MAAe,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,eAAgBC,EAAwB,EAAxBA,kBAAwB,EAC7BC,mBAAS,IADoB,mBAC9DC,EAD8D,KAChDC,EADgD,OAE/BF,mBAAS,IAFsB,mBAE9DvB,EAF8D,KAEjD0B,EAFiD,OAG3CH,mBAAS,IAHkC,mBAG9DI,EAH8D,KAGvDC,EAHuD,OAI/BL,mBAAS,IAJsB,mBAI9DM,EAJ8D,KAIjDC,EAJiD,OAK7CC,IAAMR,UAAS,GAL8B,mBAK9DS,EAL8D,KAKxDC,EALwD,KAOrEC,qBAAU,WACR,IAAMC,EAAYC,aAAaC,QAAQ,kBACnCF,GACFb,EAAkBgB,KAAKC,MAAMJ,MAE9B,CAACC,eAEJ,IAAMI,EAAc,SAACC,GACnBA,EAAMC,iBACN,IAAMC,EAAWF,EAAMG,OAAOC,UAExBC,EADYR,KAAKC,MAAMH,aAAaC,QAAQ,mBACrBU,MAAK,SAACC,GAAD,OAAUA,EAAK3C,UAAYsC,KAC7DlB,EAAgBqB,GAChBpB,EAAehB,EAAeoC,KAG1BG,EAAgB,SAACR,GACrBA,EAAMC,iBACN,IAAMQ,EAAWT,EAAMG,OAAOO,MACxB3C,EAAO4B,aAAaC,QAAQ,kBAC5Be,EAAUd,KAAKC,MAAM/B,GAC3B4C,EAAQC,OAAOH,EAAU,GACzBd,aAAakB,QAAQ,iBAAkBhB,KAAKiB,UAAUH,IACtD9B,EAAkB8B,GAClB3B,EAAgB,IAChBC,EAAe,KAOX8B,EAAc,WAClBvB,GAAQ,GACRL,EAAS,IACTE,EAAe,KA0BjB,OACE,gCACGT,EAAef,OAAS,mBAAqB,iCAC9C,+BACGe,EAAed,KAAI,SAACyC,EAAMS,GAAP,OAClB,+BACE,wBAAQC,KAAK,SAASC,QAASnB,EAAavC,UAAU,cAAtD,SACG+C,EAAK3C,UAER,cAACuD,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUX,MAAOM,EAAOE,QAASV,EAAnE,sBAJOD,EAAKe,WAShB,cAACH,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUE,MAAO,CAAEvE,UAAW,QAAUkE,QA/CxD,WACtB1B,GAAQ,IA8CJ,wBAGA,eAACgC,EAAA,EAAD,CAAQjC,KAAMA,EAAMkC,QAASV,EAAaW,kBAAgB,oBAA1D,UACE,cAACC,EAAA,EAAD,CAAaC,GAAG,oBAAhB,6BACA,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,yDAGA,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACPL,GAAG,OACHlB,MAAOxB,EACPgD,SAnDc,SAAClC,GAAW,IAC5BU,EAAUV,EAAMG,OAAhBO,MACRvB,EAASuB,IAkDCyB,MAAM,iBACNlB,KAAK,QACLmB,WAAS,IAEX,cAACL,EAAA,EAAD,CACEE,OAAO,QACPL,GAAG,cACHO,MAAM,cACNlB,KAAK,OACLoB,YAAY,cACZ3B,MAAOtB,EACP8C,SA1DoB,SAAClC,GAAW,IAClCU,EAAUV,EAAMG,OAAhBO,MACRrB,EAAeqB,IAyDL0B,WAAS,EACTE,WAAS,OAGb,eAACC,EAAA,EAAD,WACE,cAACpB,EAAA,EAAD,CAAQD,QAASH,EAAaM,MAAM,UAApC,oBAGA,cAACF,EAAA,EAAD,CAAQD,QA9DF,WACd,IAAMX,EAAO,CACXe,OAAQ1C,EAAef,OAAS,EAChCD,QAASsB,EACTlB,gBAAiBoB,GAGnBP,GAAkB,SAAC2D,GAAD,4BAAoBA,GAApB,CAAgCjC,OAClDpB,EAAS,IACTE,EAAe,IACfG,GAAQ,IAoD0B6B,MAAM,UAAhC,0BAMLtC,EAAauC,OACV,cAAC,EAAD,CAAM/D,YAAaA,EAAaD,YAAayB,IAC7C,QCjIG0D,G,MAAO,SAAC,GAEd,IADLnF,EACI,EADJA,YAAaC,EACT,EADSA,YAAamF,EACtB,EADsBA,gBAAiBC,EACvC,EADuCA,eAAgB9D,EACvD,EADuDA,kBAS3D,OAPAY,qBAAU,WACR,IAAM1B,EAAO4B,aAAaC,QAAQ,kBAC9B7B,GACFc,EAAkBgB,KAAKC,MAAM/B,MAE9B,IAGD,sBAAKP,UAAU,MAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,cAAC2D,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUH,QAAS,kBAAOwB,KAA5D,kBAGA,cAACvB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUH,QAAS,kBAAOyB,KAA5D,qBAIF,cAAC,EAAD,CACErF,YAAaA,EACbC,YAAaA,SCfRqF,EAAa,WAAO,IAAD,EACQ9D,mBAAS,IADjB,mBACvBxB,EADuB,KACVuF,EADU,OAEQ/D,mBAAS,IAFjB,mBAEvBvB,EAFuB,KAEV0B,EAFU,OAGcH,mBAAS,IAHvB,mBAGvBF,EAHuB,KAGPC,EAHO,KAIxBiE,EAAUxG,IAEVoG,EAAe,uCAAG,4BAAAK,EAAA,sEChBxBC,MAHc,sDAIXhH,MAAK,SAACiH,GAAD,OAAcA,EAASC,UAC5BlH,MAAK,SAAC+B,GAAD,OAAUA,EAAKoF,MAAM,MDcL,OAChBC,EADgB,OAEtBnE,EAAehB,EAAemF,IAC9BP,EAAeO,GAHO,2CAAH,qDAoBrB,OARA3D,qBAAU,WACRiD,MACC,IAEHjD,qBAAU,WACRE,aAAakB,QAAQ,iBAAkBhB,KAAKiB,UAAUlC,MACrD,CAACA,IAGF,eAAC,IAAD,CAAYyE,SAAS,IAArB,UACE,eAACC,EAAA,EAAD,CACE9F,UAAWsF,EAAQtG,WADrB,UAGE,cAAC,IAAD,CAAM+G,GAAG,QAAT,SACE,cAACpC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUmC,KAAK,QAAjD,oBAIF,cAAC,IAAD,CAAMD,GAAG,aAAT,SACE,cAACpC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAlC,4BAKJ,cAACoC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACE3G,WAAS,EACTS,UAAWsF,EAAQ/F,UAFrB,SAIE,eAAC,IAAD,WACE,cAAC,IAAD,CACE4G,OAAK,EACLC,KAAK,IACLC,OAAQ,kBACN,cAAC,IAAD,CAAUN,GAAG,aAGjB,cAAC,IAAD,CAAOK,KAAK,QAAZ,SACE,cAAC,EAAD,CACEtG,YAAaA,EACbC,YAAaA,EACbmF,gBAAiBA,EACjBC,eAhDS,WACI/D,EAAekF,MAAK,SAACvD,GAAD,OAAUA,EAAKe,SAAWhE,EAAYgE,WAEnFzC,EAAkB,GAAD,mBAAKD,GAAL,CAAqBtB,MA8C1BuB,kBAAmBA,MAGvB,cAAC,IAAD,CAAO+E,KAAK,aAAZ,SACE,cAAC,EAAD,CACEhF,eAAgBA,EAChBC,kBAAmBA,iBE1EnCkF,IAASF,OACP,cAAC,IAAMG,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BrI,M","file":"static/js/main.bc498451.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n  navigation: {\n    paddingBottom: '2px',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    gridGap: '20px',\n  },\n  container: {\n    marginTop: '38px',\n    paddingTop: '20px',\n    gridRow: 'row',\n    justify: 'center',\n    alignItems: 'center',\n    backgroundColor: 'gray',\n  },\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Dish.css';\n\nexport const Dish = ({ currentDish, ingredients }) => (\n  <div className=\"dish_container\">\n    {currentDish.strMealThumb ? (\n      <img\n        src={currentDish.strMealThumb}\n        className=\"dish_img\"\n        alt=\"Dish\"\n      />\n    )\n      : ''}\n\n    <h1>\n      {currentDish.strMeal}\n    </h1>\n    {ingredients.length\n      ? (\n        <ul className=\"ingredients\">\n\n          <h3>Ingredients:</h3>\n          {ingredients.map((data) => (<li key={data}>{data}</li>))}\n        </ul>\n      )\n      : ''}\n\n    <p>\n      {currentDish.strInstructions}\n    </p>\n  </div>\n);\n\nDish.propTypes = {\n  currentDish: PropTypes.shape({\n    idMeal: PropTypes.string,\n    strMealThumb: PropTypes.string,\n    strMeal: PropTypes.string,\n    strInstructions: PropTypes.string,\n  }).isRequired,\n  ingredients: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","export const getIngredients = (data) => {\n  const ingredientsData = [];\n  const keysOfData = Object.keys(data);\n  const ingredientsKeys = keysOfData.filter((key) => key.includes('strIngredient') || key.includes('strMeasure'));\n  for (let i = 1; i <= ingredientsKeys.length; i += 1) {\n    if (data[`strIngredient${i}`]) {\n      ingredientsData.push(\n        `${data[`strIngredient${i}`]} ${\n          data[`strMeasure${i}`]}`,\n      );\n    }\n  }\n\n  return ingredientsData;\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button, TextField, Dialog, DialogActions, DialogContent,\n  DialogContentText, DialogTitle,\n} from '@material-ui/core';\nimport { Dish } from '../dish/Dish';\nimport { getIngredients } from '../../utils/utils';\nimport './style.css';\n\nexport const FavoritePage = ({ favoriteDishes, setFavoriteDishes }) => {\n  const [favoriteDish, setFavoriteDish] = useState({});\n  const [ingredients, setIngredients] = useState([]);\n  const [title, setTitle] = useState('');\n  const [instruction, setInstruction] = useState('');\n  const [open, setOpen] = React.useState(false);\n\n  useEffect(() => {\n    const localData = localStorage.getItem('favoriteDishes');\n    if (localData) {\n      setFavoriteDishes(JSON.parse(localData));\n    }\n  }, [localStorage]);\n\n  const showFavMeal = (event) => {\n    event.preventDefault();\n    const mealName = event.target.innerText;\n    const localData = JSON.parse(localStorage.getItem('favoriteDishes'));\n    const chosenDish = localData.find((dish) => dish.strMeal === mealName);\n    setFavoriteDish(chosenDish);\n    setIngredients(getIngredients(chosenDish));\n  };\n\n  const deleteFavMeal = (event) => {\n    event.preventDefault();\n    const deleteId = event.target.value;\n    const data = localStorage.getItem('favoriteDishes');\n    const newData = JSON.parse(data);\n    newData.splice(deleteId, 1);\n    localStorage.setItem('favoriteDishes', JSON.stringify(newData));\n    setFavoriteDishes(newData);\n    setFavoriteDish({});\n    setIngredients([]);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setTitle('');\n    setInstruction('');\n  };\n\n  const handleChangeTitle = (event) => {\n    const { value } = event.target;\n    setTitle(value);\n  };\n\n  const handleChangeInstruction = (event) => {\n    const { value } = event.target;\n    setInstruction(value);\n  };\n\n  const addDish = () => {\n    const dish = {\n      idMeal: favoriteDishes.length + 1,\n      strMeal: title,\n      strInstructions: instruction,\n    };\n\n    setFavoriteDishes((prevDishes) => [...prevDishes, dish]);\n    setTitle('');\n    setInstruction('');\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      {favoriteDishes.length ? 'Favorite dishes:' : 'You don`t have favorite dishes'}\n      <ul>\n        {favoriteDishes.map((dish, index) => (\n          <li key={dish.idMeal}>\n            <button type=\"button\" onClick={showFavMeal} className=\"dish_button\">\n              {dish.strMeal}\n            </button>\n            <Button variant=\"contained\" color=\"default\" value={index} onClick={deleteFavMeal}>\n              Delete\n            </Button>\n          </li>\n        ))}\n        <Button variant=\"contained\" color=\"primary\" style={{ marginTop: '10px' }} onClick={handleClickOpen}>\n          Add a dish\n        </Button>\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">Add your recipe</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Add a name of dish and cooking instruction\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              value={title}\n              onChange={handleChangeTitle}\n              label=\"Name of a dish\"\n              type=\"title\"\n              fullWidth\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"description\"\n              label=\"Instruction\"\n              type=\"text\"\n              placeholder=\"Instruction\"\n              value={instruction}\n              onChange={handleChangeInstruction}\n              fullWidth\n              multiline\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={addDish} color=\"primary\">\n              Add\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </ul>\n      {favoriteDish.idMeal\n        ? <Dish ingredients={ingredients} currentDish={favoriteDish} />\n        : ''}\n\n    </div>\n  );\n};\n\nFavoritePage.propTypes = {\n  favoriteDishes: PropTypes.arrayOf(PropTypes.shape({\n    idMeal: PropTypes.string.isRequired,\n    strMealThumb: PropTypes.string.isRequired,\n    strMeal: PropTypes.string.isRequired,\n    strInstructions: PropTypes.string.isRequired,\n  })).isRequired,\n  setFavoriteDishes: PropTypes.func.isRequired,\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@material-ui/core';\nimport './style.css';\nimport { Dish } from '../dish/Dish';\n\nexport const Main = ({\n  currentDish, ingredients, fetchRandomDish, saveToFavorite, setFavoriteDishes,\n}) => {\n  useEffect(() => {\n    const data = localStorage.getItem('favoriteDishes');\n    if (data) {\n      setFavoriteDishes(JSON.parse(data));\n    }\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <div className=\"button_container\">\n        <Button variant=\"contained\" color=\"default\" onClick={() => (fetchRandomDish())}>\n          Skip\n        </Button>\n        <Button variant=\"contained\" color=\"default\" onClick={() => (saveToFavorite())}>\n          Save\n        </Button>\n      </div>\n      <Dish\n        currentDish={currentDish}\n        ingredients={ingredients}\n      />\n    </div>\n  );\n};\n\nMain.propTypes = {\n  currentDish: PropTypes.shape({\n    idMeal: PropTypes.string,\n    strMealThumb: PropTypes.string,\n    strMeal: PropTypes.string,\n    strInstructions: PropTypes.string,\n  }).isRequired,\n  ingredients: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  fetchRandomDish: PropTypes.func.isRequired,\n  saveToFavorite: PropTypes.func.isRequired,\n  setFavoriteDishes: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport {\n  HashRouter, Route, Switch, Redirect, Link,\n} from 'react-router-dom';\nimport {\n  AppBar, Button, Container, Grid,\n} from '@material-ui/core';\nimport { useStyles } from './style';\nimport { FavoritePage } from '../favorite_dishes/FavoritePage';\nimport { Main } from '../main/Main';\nimport { getRandomDish } from '../../api/dishes';\nimport { getIngredients } from '../../utils/utils';\n\nexport const RouterComp = () => {\n  const [currentDish, setCurrentDish] = useState({});\n  const [ingredients, setIngredients] = useState([]);\n  const [favoriteDishes, setFavoriteDishes] = useState([]);\n  const classes = useStyles();\n\n  const fetchRandomDish = async () => {\n    const fetchedDish = await getRandomDish();\n    setIngredients(getIngredients(fetchedDish));\n    setCurrentDish(fetchedDish);\n  };\n\n  const saveToFavorite = () => {\n    const dishAlreadyExist = favoriteDishes.some((dish) => dish.idMeal === currentDish.idMeal);\n    if (dishAlreadyExist) return;\n    setFavoriteDishes([...favoriteDishes, currentDish]);\n  };\n\n  useEffect(() => {\n    fetchRandomDish();\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('favoriteDishes', JSON.stringify(favoriteDishes));\n  }, [favoriteDishes]);\n\n  return (\n    <HashRouter basename=\"/\">\n      <AppBar\n        className={classes.navigation}\n      >\n        <Link to=\"/main\">\n          <Button variant=\"contained\" color=\"primary\" href=\"/main\">\n            Main\n          </Button>\n        </Link>\n        <Link to=\"/favorites\">\n          <Button variant=\"contained\" color=\"primary\">\n            Favorites\n          </Button>\n        </Link>\n      </AppBar>\n      <Container>\n        <Grid\n          container\n          className={classes.container}\n        >\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() => (\n                <Redirect to=\"/main\" />\n              )}\n            />\n            <Route path=\"/main\">\n              <Main\n                currentDish={currentDish}\n                ingredients={ingredients}\n                fetchRandomDish={fetchRandomDish}\n                saveToFavorite={saveToFavorite}\n                setFavoriteDishes={setFavoriteDishes}\n              />\n            </Route>\n            <Route path=\"/favorites\">\n              <FavoritePage\n                favoriteDishes={favoriteDishes}\n                setFavoriteDishes={setFavoriteDishes}\n              />\n            </Route>\n          </Switch>\n        </Grid>\n      </Container>\n    </HashRouter>\n  );\n};\n","const API_URL = 'https://www.themealdb.com/api/json/v1/1/random.php';\n\nexport const getRandomDish = () => (\n  fetch(API_URL)\n    .then((response) => response.json())\n    .then((data) => data.meals['0'])\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { RouterComp } from './components/router/RouterComp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RouterComp />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}