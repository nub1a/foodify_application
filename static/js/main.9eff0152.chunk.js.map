{"version":3,"sources":["reportWebVitals.js","components/dish/Dish.jsx","pages/favorite_dishes/FavoritePage.jsx","App.jsx","components/router/RouterComp.jsx","api/dishes.js","index.jsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Dish","currentDish","ingredients","src","strMealThumb","className","alt","strMeal","strInstructions","map","data","FavoritePage","favoriteDishes","setFavoriteDishes","useState","favoriteDish","setFavoriteDish","setIngredients","useEffect","localData","localStorage","getItem","JSON","parse","showFavMeal","event","preventDefault","mealName","target","innerText","chosenDish","find","dish","ingredientsData","i","push","filteredIngredients","filter","length","deleteFavMeal","deleteId","value","clear","newData","splice","setItem","stringify","index","type","onClick","idMeal","App","fetchRandomDish","saveToFavorite","RouterComp","setCurrentDish","a","fetch","response","json","meals","fetchedDish","basename","to","exact","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9eff0152.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Dish.css';\n\nexport const Dish = ({ currentDish, ingredients }) => (\n  <div>\n    <img\n      src={currentDish.strMealThumb}\n      className=\"dish_img\"\n      alt=\"Dish\"\n    />\n    <h1>\n      {currentDish.strMeal}\n    </h1>\n    <p>\n      {currentDish.strInstructions}\n    </p>\n    <ul>\n      Ingredients:\n      {ingredients.map((data) => (<li key={data}>{data}</li>))}\n    </ul>\n  </div>\n);\n\nDish.propTypes = {\n  currentDish: PropTypes.shape({\n    idMeal: PropTypes.string,\n    strMealThumb: PropTypes.string,\n    strMeal: PropTypes.string,\n    strInstructions: PropTypes.string,\n  }).isRequired,\n  ingredients: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Dish } from '../../components/dish/Dish';\n\nexport const FavoritePage = ({ favoriteDishes, setFavoriteDishes }) => {\n  const [favoriteDish, setFavoriteDish] = useState({});\n  const [ingredients, setIngredients] = useState([]);\n\n  useEffect(() => {\n    const localData = localStorage.getItem('favoriteDishes');\n    if (localData) {\n      setFavoriteDishes(JSON.parse(localData));\n    }\n  }, [localStorage]);\n\n  const showFavMeal = (event) => {\n    event.preventDefault();\n    const mealName = event.target.innerText;\n    const localData = JSON.parse(localStorage.getItem('favoriteDishes'));\n    const chosenDish = localData.find((dish) => dish.strMeal === mealName);\n    setFavoriteDish(chosenDish);\n\n    const ingredientsData = [];\n    for (let i = 1; i <= 20; i += 1) {\n      if (chosenDish[`strIngredient${i}`]) {\n        ingredientsData.push(\n          `${chosenDish[`strIngredient${i}`]} ${\n            chosenDish[`strMeasure${i}`]}`,\n        );\n      }\n    }\n    const filteredIngredients = ingredientsData.filter((data) => data.length > 3);\n    setIngredients(filteredIngredients);\n  };\n\n  const deleteFavMeal = (event) => {\n    event.preventDefault();\n    const deleteId = event.target.value;\n    const data = localStorage.getItem('favoriteDishes');\n    localStorage.clear();\n    const newData = JSON.parse(data);\n    newData.splice(deleteId, 1);\n    localStorage.setItem('favoriteDishes', JSON.stringify(newData));\n    setFavoriteDishes(newData);\n    setFavoriteDish({});\n    setIngredients([]);\n  };\n\n  return (\n    <div>\n      Favorite Dishes!\n      <ul>\n        {favoriteDishes.map((dish, index) => (\n          <li key={dish.idMeal}>\n            <button type=\"button\" onClick={showFavMeal}>\n              {dish.strMeal}\n            </button>\n            <button value={index} type=\"button\" onClick={deleteFavMeal}>\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n      <Dish ingredients={ingredients} currentDish={favoriteDish} />\n    </div>\n  );\n};\n\nFavoritePage.propTypes = {\n  favoriteDishes: PropTypes.arrayOf(PropTypes.shape({\n    idMeal: PropTypes.string.isRequired,\n    strMealThumb: PropTypes.string.isRequired,\n    strMeal: PropTypes.string.isRequired,\n    strInstructions: PropTypes.string.isRequired,\n  })).isRequired,\n  setFavoriteDishes: PropTypes.func.isRequired,\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './App.css';\nimport { Dish } from './components/dish/Dish';\n\nexport const App = ({\n  currentDish, ingredients, fetchRandomDish, saveToFavorite, setFavoriteDishes,\n}) => {\n  useEffect(() => {\n    const data = localStorage.getItem('favoriteDishes');\n    if (data) {\n      setFavoriteDishes(JSON.parse(data));\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n\n      <button\n        type=\"button\"\n        onClick={() => (fetchRandomDish())}\n      >\n        Skip\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => (saveToFavorite())}\n      >\n        Save\n      </button>\n      <Dish\n        currentDish={currentDish}\n        ingredients={ingredients}\n      />\n    </div>\n  );\n};\n\nApp.propTypes = {\n  currentDish: PropTypes.shape({\n    idMeal: PropTypes.string,\n    strMealThumb: PropTypes.string,\n    strMeal: PropTypes.string,\n    strInstructions: PropTypes.string,\n  }).isRequired,\n  ingredients: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  fetchRandomDish: PropTypes.func.isRequired,\n  saveToFavorite: PropTypes.func.isRequired,\n  setFavoriteDishes: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport {\n  HashRouter, Route, Switch, Redirect, Link,\n} from 'react-router-dom';\nimport { FavoritePage } from '../../pages/favorite_dishes/FavoritePage';\nimport { App } from '../../App';\nimport { getRandomDish } from '../../api/dishes';\n\nexport const RouterComp = () => {\n  const [currentDish, setCurrentDish] = useState({});\n  const [ingredients, setIngredients] = useState([]);\n  const [favoriteDishes, setFavoriteDishes] = useState([]);\n\n  const fetchRandomDish = async () => {\n    const fetchedDish = await getRandomDish();\n    const ingredientsData = [];\n    for (let i = 1; i <= 20; i += 1) {\n      if (fetchedDish[`strIngredient${i}`]) {\n        ingredientsData.push(\n          `${fetchedDish[`strIngredient${i}`]} ${\n            fetchedDish[`strMeasure${i}`]}`,\n        );\n      }\n    }\n    const filteredIngredients = ingredientsData.filter((data) => data.length > 3);\n    setIngredients(filteredIngredients);\n    setCurrentDish(fetchedDish);\n  };\n\n  const saveToFavorite = () => {\n    setFavoriteDishes([...favoriteDishes, currentDish]);\n  };\n\n  useEffect(() => {\n    fetchRandomDish();\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('favoriteDishes', JSON.stringify(favoriteDishes));\n  }, [favoriteDishes]);\n\n  return (\n    <div>\n      <HashRouter basename=\"/\">\n        <Link to=\"/main\">Main Page</Link>\n        <Link to=\"/favorites\">Favorites page</Link>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => (\n              <Redirect to=\"/main\" />\n            )}\n          />\n          <Route path=\"/main\">\n            <App\n              currentDish={currentDish}\n              ingredients={ingredients}\n              fetchRandomDish={fetchRandomDish}\n              saveToFavorite={saveToFavorite}\n              setFavoriteDishes={setFavoriteDishes}\n            />\n          </Route>\n          <Route path=\"/favorites\">\n            <FavoritePage favoriteDishes={favoriteDishes} setFavoriteDishes={setFavoriteDishes} />\n          </Route>\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n};\n","const API_URL = 'https://www.themealdb.com/api/json/v1/1/random.php';\n\nexport const getRandomDish = () => (\n  fetch(API_URL)\n    .then((response) => response.json())\n    .then((data) => data.meals['0'])\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { RouterComp } from './components/router/RouterComp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RouterComp />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}